<?php


namespace CPLN\Modules\EditorModule\Services;


use Plexus\AbstractRuntime;
use Plexus\Service\AbstractService;

class FlowService extends AbstractService {

    /**
     * @param AbstractRuntime $runtime
     * @param mixed ...$options
     * @return FlowService
     */
    public static function fromRuntime(AbstractRuntime $runtime, ...$options) {
        return parent::fromRuntime($runtime, $options); // TODO: Change the autogenerated stub
    }

    /**
     * @param $identifier
     * @return \Plexus\Model|null
     * @throws \Plexus\Exception\ModelException
     */
    public function get($identifier) {
        $flowManager = $this->getModelManager("flow");
        $flow = $flowManager->get(['identifier' => $identifier]);
        if ($flow) {
            $scheme = json_decode($flow->scheme, true);
            $flow->settings = $scheme['settings'];
            $flow->nodes = $scheme['nodes'];
            $flow->links = $scheme['links'];
            $flow->positions = $scheme['positions'];
        }
        return $flow;
    }

}