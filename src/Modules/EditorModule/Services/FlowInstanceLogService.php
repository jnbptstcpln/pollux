<?php

namespace CPLN\Modules\EditorModule\Services;


use Plexus\AbstractRuntime;
use Plexus\Exception\PlexusException;
use Plexus\Model;
use Plexus\ModelSelector;
use Plexus\Service\AbstractService;
use Plexus\Utils\Randomizer;
use Plexus\Utils\Text;

class FlowInstanceLogService extends AbstractService {

    /**
     * @param AbstractRuntime $runtime
     * @param mixed ...$options
     * @return FlowInstanceLogService
     */
    public static function fromRuntime(AbstractRuntime $runtime, ...$options) {
        return parent::fromRuntime($runtime, $options); // TODO: Change the autogenerated stub
    }

    public function get($flow_instance_identifier, $log_index=null) {
        $logManager = $this->getModelManager("flow_instance_log");
        if ($log_index !== null) {
            $logs = $logManager->select(
                ModelSelector::where(
                    "flow_instance_identifier = :flow_instance_identifier",
                    ['flow_instance_identifier' => $flow_instance_identifier]
                ),
                ModelSelector::where(
                    "id > :log_index",
                    ['log_index' => $log_index]
                ),
                ModelSelector::order("created_on", "DESC")
            );
        } else {
            $logs = $logManager->select(
                ModelSelector::where(
                    "flow_instance_identifier = :flow_instance_identifier",
                    ['flow_instance_identifier' => $flow_instance_identifier]
                ),
                ModelSelector::order("created_on", "DESC")
            );
        }

        return $logs;
    }

    public function logMessage($flow_instance_identifier, $message, $time=null) {
        $logManager = $this->getModelManager("flow_instance_log");
        $log = $logManager->create();
        $log->flow_instance_identifier = $flow_instance_identifier;
        $log->message = $message;
        if ($time !== null) {
            $log->created_on = date("Y-m-d H:i:s", intval($time));
            $logManager->insert($log);
        } else {
            $logManager->insert($log, [
                'created_on' => 'NOW(3)'
            ]);
        }
    }

}