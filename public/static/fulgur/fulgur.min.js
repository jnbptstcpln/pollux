Fulgur = function(selector, context, options) {context = context || document;options = options || {};if (selector.constructor === String) {var domElements = null;if (context._DOMElement) {domElements = context._querySelectorAll(selector);} else {domElements =context.querySelectorAll(selector)}if (domElements.length === 1) {if (options.collection) {return new Fulgur.ElementsCollection(domElements);}return new Fulgur.Element(domElements[0]);} else if (domElements.length > 1) {if (options.one) {return new Fulgur.Element(domElements[0]);}return new Fulgur.ElementsCollection(domElements);} else {return new Fulgur.Element(null);}} else if (selector._DOMElement) {if (options.collection) {return new Fulgur.ElementsCollection(selector._DOMElement);}return selector;} else {if (options.collection) {return new Fulgur.ElementsCollection([selector]);}return new Fulgur.Element(selector);}};Fulgur.debug = false;Fulgur.registerExtension = function(name, extension) {if (Fulgur[name]) {throw "The name '"+name+"' can't be use";}Fulgur[name] = extension;};Fulgur.registerElementExtension = function(name, extension) {if (Fulgur.Element.prototype[name]) {throw "The name '"+name+"' can't be use";}Fulgur.Element.prototype[name] = function() {if (this._DOMElement === null) {return;}extension.apply(this, arguments);};Fulgur.ElementsCollection.prototype[name] = function() {this.each(function(index, element) {element[name].apply(element, arguments);})}};Fulgur.Element = function(DOMElement) {this._DOMElement = DOMElement;this._listeners = {};if (this._DOMElement !== null) {if (this._DOMElement.__fulgur) {this._listeners = this._DOMElement.__fulgur._listeners;delete this._DOMElement.__fulgur;}this._DOMElement.__fulgur = this;}};Fulgur.Element.prototype.append = function(element) {if (this._DOMElement === null) {return this;}if (typeof element === 'string') {this._DOMElement.insertAdjacentHTML('beforeend', element);} else if (element._DOMElement) {this._DOMElement.appendChild(element._DOMElement);} else {this._DOMElement.appendChild(element);}return this;};Fulgur.Element.prototype.prepend = function(element) {if (this._DOMElement === null) {return this;}if (typeof element === 'string') {this._DOMElement.insertAdjacentHTML('afterbegin', element);} else if (element._DOMElement) {this._DOMElement.insertBefore(element._DOMElement, this._DOMElement.firstChild);} else {this._DOMElement.insertBefore(element._DOMElement, this._DOMElement.firstChild);}return this;};Fulgur.Element.prototype.remove = function() {if (this._DOMElement === null) {return;}this._DOMElement.remove();};Fulgur.Element.prototype.matches = function(selector) {if (this._DOMElement === null) {return false;}return this._DOMElement.matches(selector);};Fulgur.Element.prototype.exists = function() {return  !(this._DOMElement === null);};Fulgur.Element.prototype.parent = function (selector) {if (this._DOMElement === null) {return this;}selector = selector || null;if (selector === null) {return Fulgur(this._DOMElement.parentElement)} else {var parent = this._DOMElement.parentElement;while (parent !== null) {if (parent.matches(selector)) {return Fulgur(parent);}parent = parent.parentElement;}return new Fulgur.Element(null);}};Fulgur.Element.prototype.children = function () {if (this._DOMElement === null) {return new Fulgur.ElementsCollection([]);}return new Fulgur.ElementsCollection(this._DOMElement.children);};Fulgur.Element.prototype.find = function (selector) {if (this._DOMElement === null) {return this;}return Fulgur(selector, this);};Fulgur.Element.prototype.get = function (name) {if (this._DOMElement === null) {return null;}return this._DOMElement[name];};Fulgur.Element.prototype.set = function (name, value) {if (this._DOMElement === null) {return this;}this._DOMElement[name] = value;return this;};Fulgur.Element.prototype._querySelectorAll = function (selector) {if (this._DOMElement === null) {return [];}return this._DOMElement.querySelectorAll(selector);};Fulgur.Element.prototype.attr = function (key, value) {if (typeof value === "undefined") {if (this._DOMElement === null) {return null;}return this._DOMElement.getAttribute(key);} else if (value === null) {if (this._DOMElement === null) {return this;}this._DOMElement.removeAttribute(key);return this;} else {if (this._DOMElement === null) {return this;}this._DOMElement.setAttribute(key, value);return this;}};Fulgur.Element.prototype.addClass = function(className) {if (this._DOMElement === null) {return this;}this._DOMElement.classList.add(className);return this;};Fulgur.Element.prototype.removeClass = function(className) {if (this._DOMElement === null) {return this;}this._DOMElement.classList.remove(className);return this;};Fulgur.Element.prototype.hasClass = function(className) {if (this._DOMElement === null) {return false;}return this._DOMElement.classList.contains(className);};Fulgur.Element.prototype.html = function (value) {if (typeof value === "undefined") {if (this._DOMElement === null) {return null;}return this._DOMElement.innerHTML;} else {if (this._DOMElement === null) {return this;}this._DOMElement.innerHTML = value;return this;}};Fulgur.Element.prototype.text = function (value) {if (typeof value === "undefined") {if (this._DOMElement === null) {return null;}return this._DOMElement.innerText;} else {if (this._DOMElement === null) {return this;}this._DOMElement.innerText = value;return this;}};Fulgur.Element.prototype.execute = function (modifier) {modifier(this);return this;};Fulgur.Element.prototype.toCollection = function() {if (this._DOMElement === null) {return new Fulgur.ElementsCollection([]);}return new Fulgur.ElementsCollection([this._DOMElement]);};Fulgur.ElementsCollection = function (DOMElements) {this.elements = [];for (var i = 0; i < DOMElements.length; i++) {this.elements.push(new Fulgur.Element(DOMElements[i]));}};Fulgur.ElementsCollection.prototype.get = function(index) {return this.elements[index];};Fulgur.ElementsCollection.prototype.length = function() {return this.elements.length;};Fulgur.ElementsCollection.prototype.each = function(callback) {for (var i = 0; i < this.elements.length; i++) {callback(i, this.elements[i]);}return this;};Fulgur.ElementsCollection.prototype.attr = function (key, value) {if (typeof value === "undefined") {var attributes = [];this.each(function(index, element) {attributes.push(element.attr(key))});return attributes;} else {this.each(function(index, element) {element.attr(key, value)});return this;}};Fulgur.ElementsCollection.prototype.value = function (value) {if (typeof value === "undefined") {var values = {};this.each(function(index, element) {if (element.attr('name')) {values[element.attr('name')] = element.value()}});return values;} else {this.each(function(index, element) {if (typeof value === 'string') {element.value(value)} else {if (value[element.attr('name')]) {element.value(value[element.attr('name')]);}}});return this;}};Fulgur.ElementsCollection.prototype.execute = function (modifier) {this.each(function(index, element) {element.execute(modifier);});return this;};Fulgur.ElementsCollection.prototype.toCollection = function (value) {return this;};Fulgur.api = {};Fulgur.api.get = function (url, data, callback, headers) {headers = headers || {};headers['Accept'] = 'application/json';var req = new Fulgur.http.GetRequest(url, data, headers);req.success(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'La réponse du serveur est invalide.'}}callback(response);}).error(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'Une erreur est survenue lors de la requête.'}}callback(response);});req.send();return req;};Fulgur.api.post = function (url, data, callback, headers) {headers = headers || {};headers['Accept'] = 'application/json';var req = new Fulgur.http.PostRequest(url, data, headers);req.success(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'La réponse du serveur est invalide.'}}callback(response);}).error(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'Une erreur est survenue lors de la requête.'}}callback(response);});req.send();return req;};Fulgur.api.put = function (url, data, callback, headers) {headers = headers || {};headers['Accept'] = 'application/json';var req = new Fulgur.http.PutRequest(url, data, headers);req.success(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'La réponse du serveur est invalide.'}}callback(response);}).error(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'Une erreur est survenue lors de la requête.'}}callback(response);});req.send();return req;};Fulgur.api.delete = function (url, callback, headers) {headers = headers || {};headers['Accept'] = 'application/json';var req = new Fulgur.http.DeleteRequest(url, data, headers);req.success(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'La réponse du serveur est invalide.'}}callback(response);}).error(function(raw) {var response = {};try {response = JSON.parse(raw.text);} catch (e) {response = {'success': false, message:'Une erreur est survenue lors de la requête.'}}callback(response);});req.send();return req;};Fulgur.cookie = {};Fulgur.cookie.set = function(key, value, attributes) {if (typeof document === 'undefined') {return;}function extend () {var i = 0;var result = {};for (; i < arguments.length; i++) {var attributes = arguments[ i ];for (var key in attributes) {result[key] = attributes[key];}}return result;}attributes = extend({path: '/'}, attributes);if (typeof attributes.expires === 'number') {attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);}attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';try {var result = JSON.stringify(value);if (/^[\{\[]/.test(result)) {value = result;}} catch (e) {}value = encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);key = encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape);var stringifiedAttributes = '';for (var attributeName in attributes) {if (!attributes[attributeName]) {continue;}stringifiedAttributes += '; ' + attributeName;if (attributes[attributeName] === true) {continue;}stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];}return (document.cookie = key + '=' + value + stringifiedAttributes);};Fulgur.cookie.get = function(key, json) {if (typeof document === 'undefined') {return;}function decode (s) {return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);}var jar = {};var cookies = document.cookie ? document.cookie.split('; ') : [];var i = 0;for (; i < cookies.length; i++) {var parts = cookies[i].split('=');var cookie = parts.slice(1).join('=');if (!json && cookie.charAt(0) === '"') {cookie = cookie.slice(1, -1);}try {var name = decode(parts[0]);cookie = decode(cookie);if (json) {try {cookie = JSON.parse(cookie);} catch (e) {}}jar[name] = cookie;if (key === name) {break;}} catch (e) {}}return key ? jar[key] : jar;};Fulgur.cookie.remove = function(key, attributes) {function extend () {var i = 0;var result = {};for (; i < arguments.length; i++) {var attributes = arguments[ i ];for (var key in attributes) {result[key] = attributes[key];}}return result;}Fulgur.cookie.set(key, '', extend(attributes, {expires: -1}));};Fulgur.DOM = {};Fulgur.DOM.create = function(tagName) {var e = document.createElement(tagName);return Fulgur(e);};Fulgur.Element.prototype.style = function(key, value, animate) {if (typeof value == "undefined") {if (this._DOMElement === null) {return null;}return this._DOMElement.style[key];} else {if (this._DOMElement === null) {return this;}this._DOMElement.style[key] = value;return this;}};Fulgur.Element.prototype.getComputedStyle = function(pseudoElt) {return window.getComputedStyle(this._DOMElement, pseudoElt || null);};Fulgur.Element.prototype.hide = function() {return this.style('display', 'none')};Fulgur.Element.prototype.show = function() {return this.style('display', '')};Fulgur.Element.prototype.width = function(value) {if (typeof value === "undefined") {return Math.trunc(Number(this.getComputedStyle()['width'].replace('px' , '')));} else {if (typeof value === "string") {this.style('width', value)} else {this.style('width', value+'px')}return this;}};Fulgur.Element.prototype.height = function(value) {if (typeof value === "undefined") {return Math.trunc(Number(this.getComputedStyle()['height'].replace('px' , '')));} else {if (typeof value === "string") {this.style('height', value)} else {this.style('height', value+'px')}return this;}};Fulgur.ElementsCollection.prototype.style = function(key, value) {if (typeof value == "undefined") {var attributes = [];this.each(function(index, element) {attributes.push(element.style(key))});return attributes;} else {this.each(function(index, element) {element.style(key, value)});return this;}};Fulgur.ElementsCollection.prototype.hide = function() {this.style('display', 'none')};Fulgur.ElementsCollection.prototype.show = function() {this.style('display', '')};Fulgur.Element.prototype.on = function(identifier, selector, callback) {if (this._DOMElement === null) {return this;}if (typeof callback === 'undefined') {callback = selector;selector = null;}var type = identifier.split('.', 1)[0];var _callback = function(event) {event.data = event.detail || {};if (selector !== null) {event.element = null;var target = $(event.target);if (target.exists()) {if (target.matches(selector)) {event.element = target;} else {var parent = target.parent(selector);if (parent.exists()) {event.element = parent;}}}if (event.element !== null) {callback(event);}} else {event.element = this;callback(event);}}.bind(this);this._DOMElement.addEventListener(type, _callback);if (!this._listeners[identifier]) {this._listeners[identifier] = [];}this._listeners[identifier].push({type: type, selector: selector, callback: _callback});return this;};Fulgur.ElementsCollection.prototype.on = function(identifier, selector, callback) {this.each(function(index, element) {element.on(identifier, selector, callback);});return this;};Fulgur.Element.prototype.off = function(identifier, selector) {if (this._DOMElement === null) {return this;}selector = selector || null;if (this._listeners[identifier]) {for (var i = 0; i<this._listeners[identifier].length; i++) {console.log(this._listeners[identifier][i]);if (this._listeners[identifier][i].selector === selector) {this._DOMElement.removeEventListener(this._listeners[identifier][i].type, this._listeners[identifier][i].callback);this._listeners[identifier].splice(i, 1);}}if (this._listeners[identifier].length === 0) {delete this._listeners[identifier];}}return this;};Fulgur.ElementsCollection.prototype.off = function(identifier) {this.each(function(index, element) {element.off(identifier);});return this;};Fulgur.Element.prototype.trigger = function(identifier, data) {if (this._DOMElement === null) {return this;}var type = identifier.split('.', 1)[0];var event = new CustomEvent(type, {'bubbles': true,'cancelable': true,'detail': data});this._DOMElement.dispatchEvent(event);return this;};Fulgur.ElementsCollection.prototype.trigger = function(identifier) {this.each(function(index, element) {element.trigger(identifier);});return this;};Fulgur.http = {};Fulgur.http.METHOD_POST = 'POST';Fulgur.http.METHOD_GET = 'GET';Fulgur.http.METHOD_PUT = 'PUT';Fulgur.http.METHOD_DELETE = 'DELETE';Fulgur.http.x = function () {if (typeof XMLHttpRequest !== 'undefined') {return new XMLHttpRequest();}var versions = ["MSXML2.XmlHttp.6.0","MSXML2.XmlHttp.5.0","MSXML2.XmlHttp.4.0","MSXML2.XmlHttp.3.0","MSXML2.XmlHttp.2.0","Microsoft.XmlHttp"];var xhr;for (var i = 0; i < versions.length; i++) {try {xhr = new ActiveXObject(versions[i]);break;} catch (e) {}}return xhr;};Fulgur.http.send = function (url, callback, method, data, async) {if (async === undefined) {async = true;}var x = this.x();x.open(method, url, async);x.onreadystatechange = function (){if (x.readyState === 4) {if (Fulgur.debug) {console.debug(x);}callback(x.responseText)}};if (method === Fulgur.http.METHOD_POST) {x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');}x.send(data)};Fulgur.http.get = function (url, data, headers) {return new Fulgur.http.GetRequest(url, data, headers);};Fulgur.GET = Fulgur.http.get;Fulgur.http.post = function (url, data, headers) {return new Fulgur.http.PostRequest(url, data, headers);};Fulgur.POST = Fulgur.http.post;Fulgur.http.put = function (url, data, headers) {return new Fulgur.http.PutRequest(url, data, headers);};Fulgur.PUT = Fulgur.http.put;Fulgur.http.delete = function (url, headers) {return new Fulgur.http.DeleteRequest(url, headers);};Fulgur.DELETE = Fulgur.http.put;Fulgur.http.upload = function (url, files, headers) {return new Fulgur.http.FileUploadRequest(url, files, headers);};Fulgur.upload = Fulgur.http.upload;Fulgur.http.Request = function(type, url, data, headers) {this.type = type;this.url = url || "";this.data = data || {};this.headers = headers || {};this.sent = false;this.aborted = false;this.onload = function() {};this.onsuccess = function() {};this.onerror = function() {};this.ondownloadprogress = function() {};this.onuploadprogress = function() {};var x = Fulgur.http.x();x.open(this.type, this.url, true);for (var name in headers) {x.setRequestHeader(name, headers[name]);}x.onreadystatechange = function() {if (x.readyState === 4 && !this.aborted) {if (Fulgur.debug) {console.debug(x);}var response = {status: {code: x.status,text: x.statusText},text: x.responseText,type: x.responseType};this.onload();if (100 <= x.status && x.status < 400) {this.onsuccess(response);} else {this.onerror(response);}}}.bind(this);x.onprogress = function(event) {if (Fulgur.debug) {console.debug(event);}var progress = {computable: event.lengthComputable,percentage: null};if (event.lengthComputable) {progress.percentage = (event.loaded / event.total) * 100;}this.ondownloadprogress(progress);}.bind(this);x.upload.onprogress = function(event) {if (Fulgur.debug) {console.debug(event);}var progress = {computable: event.lengthComputable,percentage: null};if (event.lengthComputable) {progress.percentage = (event.loaded / event.total) * 100;}this.onuploadprogress(progress);}.bind(this);this.load = function(callback) {this.onload = callback;return this;};this.success = function(callback) {this.onsuccess = callback;return this;};this.error = function(callback) {this.onerror = callback;return this;};this.timeout = function(callback, time) {x.timeout = time;x.ontimeout = callback;return this;};this.uploadprogress = function(callback) {this.onuploadprogress = callback;return this;};this.downloadprogress = function(callback) {this.ondownloadprogress = callback;return this;};this.delegate = function(handler) {this.load(handler.onload || function() {});this.success(handler.onsuccess || function() {});this.error(handler.onerror || function() {});this.timeout(handler.ontimeout || function() {});this.uploadprogress(handler.onuploadprogress || function() {});this.downloadprogress(handler.ondownloadprogress || function() {});return this;};this.send = function() {var formData = null;if (this.data) {formData = new FormData();for(var key in this.data) {formData.append(key, this.data[key]);}}this.sent = true;x.send(formData);};this.abort = function() {this.aborted = true;x.abort();}};Fulgur.http.GetRequest = function(url, data, headers) {var query = [];for (var key in data) {query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));}if (url.indexOf('?') >= 0) {url += (query.length ? '&' + query.join('&') : '');} else {url += (query.length ? '?' + query.join('&') : '');}Fulgur.http.Request.call(this, Fulgur.http.METHOD_GET, url, null, headers);};Fulgur.http.PostRequest =  function(url, data, headers) {Fulgur.http.Request.call(this, Fulgur.http.METHOD_POST, url, data, headers);};Fulgur.http.PutRequest = function(url, data, headers) {Fulgur.http.Request.call(this, Fulgur.http.METHOD_PUT, url, data, headers);};Fulgur.http.DeleteRequest = function(url, headers) {Fulgur.http.Request.call(this, Fulgur.http.METHOD_DELETE, url, null, headers);};Fulgur.http.Handler = function(parent) {parent = parent || {};this.onload = parent.onload || function() {};this.onsuccess = parent.onsuccess || function() {};this.onerror = parent.onerror || function() {};this.ondownloadprogress  = parent.ondownloadprogress || function() {};this.onuploadprogress = parent.onuploadprogress || function() {};this.load = function(callback) {this.onload = callback;return this;};this.success = function(callback) {this.onsuccess = callback;return this;};this.error = function(callback) {this.onerror = callback;return this;};this.timeout = function(callback, time) {x.timeout = time;x.ontimeout = callback;return this;};this.uploadprogress = function(callback) {this.onuploadprogress = callback;return this;};this.downloadprogress = function(callback) {this.ondownloadprogress = callback;return this;};this.createLinkedHandler = function() {var parent_handler = this;var handler = new Fulgur.http.Handler(parent_handler);handler.load = function(callback) {this.onload = function (a) {callback(parent_handler.onload(a));};return this;};handler.success = function(callback) {this.onsuccess = function (a) {callback(parent_handler.onsuccess(a));};return this;};handler.error = function(callback) {this.onerror = function (a) {callback(parent_handler.onerror(a));};return this;};handler.timeout = function(callback, time) {x.timeout = time;x.ontimeout = function (a) {callback(parent_handler.ontimeout(a));};return this;};handler.uploadprogress = function(callback) {this.onuploadprogress = function (a) {callback(parent_handler.onuploadprogress(a));};return this;};handler.downloadprogress = function(callback) {this.ondownloadprogress = function (a) {callback(parent_handler.ondownloadprogress(a));};return this;};return handler;}};Fulgur.selection = {};Fulgur.selection.save = function () {if (window.getSelection) {var sel = window.getSelection();if (sel.getRangeAt && sel.rangeCount) {return sel.getRangeAt(0);}} else if (document.selection && document.selection.createRange) {return document.selection.createRange();}return null;};Fulgur.selection.restore = function(range) {if (range) {if (window.getSelection) {var sel = window.getSelection();sel.removeAllRanges();sel.addRange(range);} else if (document.selection && range.select) {range.select();}}};Fulgur.selection.clear =function() {var sel = window.getSelection();sel.removeAllRanges();};Fulgur.selection.select = function(el) {if (el._DOMElement) {el = el._DOMElement;}var range = document.createRange();range.selectNodeContents(el);var sel = window.getSelection();sel.removeAllRanges();sel.addRange(range);};Fulgur.selection.html = function() {var html = "";if (typeof window.getSelection != "undefined") {var sel = window.getSelection();if (sel.rangeCount) {var container = document.createElement("div");for (var i = 0, len = sel.rangeCount; i < len; ++i) {container.appendChild(sel.getRangeAt(i).cloneContents());}html = container.innerHTML;}} else if (typeof document.selection != "undefined") {if (document.selection.type == "Text") {html = document.selection.createRange().htmlText;}}return html;};Fulgur.forEach = function(array, callback) {for (var i in array) {callback(i, array[i]);}};Fulgur.exists = function(selecteur, context) {context = context || document;if (context._DOMElement) {return context._querySelectorAll(selector).length > 0;} else {return context.querySelectorAll(selector).length > 0;}};Fulgur.getQueryParameter = function(name, url) {if (!url) url = window.location.href;name = name.replace(/[\[\]]/g, '\\$&');var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),results = regex.exec(url);if (!results) return null;if (!results[2]) return '';return decodeURIComponent(results[2].replace(/\+/g, ' '));};Fulgur.format = function(format) {var args = Array.prototype.slice.call(arguments, 1);if (args.length === 1 && typeof args[0] === 'object') {var replacements = args[0];return format.replace(/{([\w]+)}/g, function(match, key) {return typeof replacements[key] !== 'undefined'? replacements[key]: match;});} else {return format.replace(/{(\d+)}/g, function(match, number) {return typeof args[number] !== 'undefined'? args[number]: match;});}};